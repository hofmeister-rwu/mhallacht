@cardWidth:3em;
@cardHeight:4em;
@cardMargin:0.5em;

body{
  min-height:100vh;
  min-width:767px;
  width:100vw;
  position:relative;
  //overflow:hidden;
  //background-color:darkblue;
  //color:white;
}

.modal-content{
  color:black;
}

.playerCards div.card, .double-card{
    cursor:pointer;
    &:hover{
      bottom:3px;
    }
}


//Override
.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
     position: static;
}

.z-index-100{
  z-index:1001;
}
.alert{
  z-index:1002;
}
.modal-backdrop{
  z-index:1003;
}
.center{
  display:flex;
  justify-content: center;
}

.button-row{
  display:flex;
  justify-content: center;
  position: absolute;
  bottom:0px;
  width:100%;
  left:0px;
}

.button-row button:not(:first-child){
  margin-left:10px;
}

.top-buttons{
  position: absolute;
    height: 100%;
    top: 0px;
    right: 0px;
}

.top-buttons .btn{
  height:100%;
  margin-left:5px;
}

.deckContainer{
  padding:@cardMargin;
}
.deckContainer.active{
  background-color:rgba(204, 229, 255,0.5);
}
.deckHeading{
  text-align: center;
}

.deck{
  display:flex;
  text-align:center;
  justify-content: center;
}
.card{
  height: @cardHeight;
  width:@cardWidth;
  position:relative;
}

.roleCard.card{
  position:absolute;
  left:100%;
}

.active .roleCard.card, .end .roleCard.card{
  height:calc(@cardHeight*2);
  width:calc(@cardHeight*2);
  top:0px;

}
.card-down{
    color:transparent;
}

.stacks{
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  top: 0px;
  left: 0px;
}
.deck.stackCards .card{
  margin-left:(@cardWidth*-1+0.1);
}
.deck.stackCards .card:first-child:not(.front-card), .deck.stackCards .front-card+.card{
  margin-left:@cardMargin;
}

.player:first-child:nth-last-child(2),
.player:nth-child(2):last-child{
    .generate-player-position-indexes(2);
}

.player:first-child:nth-last-child(3),
.player:nth-child(2):nth-last-child(2),
.player:nth-child(3):last-child{
    .generate-player-position-indexes(3);
}

.player:first-child:nth-last-child(4),
.player:nth-child(2):nth-last-child(3),
.player:nth-child(3):nth-last-child(2),
.player:nth-child(4):last-child{
    .generate-player-position-indexes(4);
}

.player:first-child:nth-last-child(5),
.player:nth-child(2):nth-last-child(4),
.player:nth-child(3):nth-last-child(3),
.player:nth-child(4):nth-last-child(2),
.player:nth-child(5):last-child{
    .generate-player-position-indexes(5);
}

.player:first-child:nth-last-child(6),
.player:nth-child(2):nth-last-child(5),
.player:nth-child(3):nth-last-child(4),
.player:nth-child(4):nth-last-child(3),
.player:nth-child(5):nth-last-child(2),
.player:nth-child(6):last-child{
    .generate-player-position-indexes(6);
}

.generate-player-position-indexes(@n, @i: 1) when (@i =< @n) {
  .player-@{i} {
    position:absolute;
    transform:rotate((360 / @n )*(@i - 1deg));
    & when (mod(@n,2)=1) and not (@i = 1){
      & when (@i = ((@n + 1) / 2 )), (@i = ((@n + 1) / 2 + 1) ){
        top:25%;
        & when (@i <= ((@n + 1) / 2 ) ){
          left:5%;
          @media(max-width:991px){
            left:0%;
            transform:rotate(90deg);
          }
          @media(min-width:1200px){
            left:15%;
          }
        }
        & when (@i > ((@n + 1) / 2 )){
          right:5%;
          @media(max-width:991px){
            right:0%;
            transform:rotate(270deg);
          }
          @media(min-width:1200px){
            right:15%;
          }
        }
      }

      & when not (@i = ((@n + 1) / 2 )) and not (@i = ((@n + 1) / 2 + 1) ){
        bottom: 25%;
        & when (@i <= ((@n + 1) / 2 ) ){
          left:5%;
          @media(max-width:991px){
            left:0%;
            transform:rotate(90deg);
          }
          @media(min-width:1200px){
            left:15%;
          }
        }
        & when (@i > ((@n + 1) / 2 )){
          right:5%;
          @media(max-width:991px){
            right:0%;
            transform:rotate(270deg);
          }
          @media(min-width:1200px){
            right:15%;
          }
        }
      }

    }

    & when (mod(@n,2)=0) and not (@i = 1){
      & when ((@n / 2) + 1 > @i){
        left:5%;
        bottom:60%;
        @media(max-width:991px){
          left:0%;
          bottom:65%;
          transform:rotate(90deg);

        }
        @media(min-width:1200px){
          left:15%;
        }
        & when (@i = 2){
          bottom: 25%;
          @media(max-width:991px){
            bottom:20%
          }
        }
      }
      & when ((@n / 2) + 1 < @i){
        right:5%;
        bottom:60%;
        @media(max-width:991px){
          right:0%;
          bottom:55%;
          transform:rotate(270deg);
        }
        @media(min-width:1200px){
          right:15%;
        }
        & when (@i = @n){
          bottom: 25%;
          @media(max-width:991px){
            bottom:10%
          }
        }
      }
      & when (@n = 4) and not (@i = 3){
        bottom:40%;
        @media(max-width:991px){
          bottom:40%
        }
      }
    }

    & when (@i = 1) {
      bottom: 50px;
      transform:rotate(0deg);
      //align-self:center;
    }
    & when (@i = 1), (@i = 3) and (@n=4),  (@i = 4) and (@n=6){
      left:auto;
    }
    transition-property: top bottom left right rotate;
    transition: 0.5s ease-out;
  }
  .generate-player-position-indexes(@n, (@i + 1));
}



.deck.playerCards .card{
  margin: auto @cardMargin;
}


.card {
  background-color: transparent;
  border: none;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.card-body {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
  padding: 0px;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
.card-down .card-body {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  top:0px;
  left:0px;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  background-size:contain;
  //background-repeat:no-repeat;
  border:1px solid #C2F7EA;
}

.chosenCard .card-front, .chosenCard .card-back{
  box-shadow:
        0 0 15px 8px white,  /* inner white */
        0 0 15px 8px cyan;
}

.enemyCard .card-front, .enemyCard .card-back{
  box-shadow:
        0 0 15px 8px white,  /* inner white */
        0 0 15px 8px red;
}

/* Style the front side*/
.value-0 .card-front{
    background-image:url(../js/public/static/value-0.jpg);
}

.value-1 .card-front{
    background-image:url(../js/public/static/value-1.jpg);
}

.value-2 .card-front{
    background-image:url(../js/public/static/value-2.jpg);
}

.value-3 .card-front{
    background-image:url(../js/public/static/value-3.jpg);
}

.value-4 .card-front{
    background-image:url(../js/public/static/value-4.jpg);
}

.value-5 .card-front{
    background-image:url(../js/public/static/value-5.jpg);
}

.value-6 .card-front{
    background-image:url(../js/public/static/value-6.jpg);
}

.value-7 .card-front{
    background-image:url(../js/public/static/value-7.jpg);
}

.value-8 .card-front{
    background-image:url(../js/public/static/value-8.jpg);
}

.value-9 .card-front{
    background-image:url(../js/public/static/value-9.jpg);
}

.value-double .card-front{
    background-image:url(../js/public/static/value-double.jpg);
}

.value-end .card-front{
    background-image:url(../js/public/static/value-end.jpg);
}

.value-show .card-front{
    background-image:url(../js/public/static/value-show.jpg);
}

.value-skip .card-front{
    background-image:url(../js/public/static/value-skip.jpg);
}

.value-swap .card-front{
    background-image:url(../js/public/static/value-swap.jpg);
}

.roleCard .card-front{
    background-image:url(../js/public/static/role-back.png);
    background-repeat: no-repeat;
    border:none;
}
.roleCard.value-abenteurer .card-front{
    background-image:url(../js/public/static/value-abenteurer.png);
}

.roleCard.value-alter-mann .card-front{
    background-image:url(../js/public/static/value-alter-mann.png);
}

.roleCard.value-buerokrat .card-front{
    background-image:url(../js/public/static/value-buerokrat.png);
}

.roleCard.value-gottheit .card-front{
    background-image:url(../js/public/static/value-gottheit.png);
}

.roleCard.value-haendler .card-front{
    background-image:url(../js/public/static/value-haendler.png);
}

.roleCard.value-kobold .card-front{
    background-image:url(../js/public/static/value-kobold.png);
}

.roleCard.value-koenig .card-front{
    background-image:url(../js/public/static/value-koenig.png);
}

.roleCard.value-prediger .card-front{
    background-image:url(../js/public/static/value-prediger.png);
}

.roleCard.value-wanderer .card-front{
    background-image:url(../js/public/static/value-wanderer.png);
}
.roleCard.value-fremdling .card-front{
    background-image:url(../js/public/static/value-fremdling.png);
}
.roleCard.value-jaeger .card-front{
    background-image:url(../js/public/static/value-jaeger.png);
}
.roleCard.value-oberhaupt .card-front{
    background-image:url(../js/public/static/value-oberhaupt.png);
}
/* Style the back side */
.card-back {
  background-image:url(../js/public/static/backcard.jpg);
  transform: rotateY(180deg);
}
.roleCard .card-back {
  background-image:url(../js/public/static/role-back.png);
  border:none;
  transform: rotateY(180deg);
}

.end-false .deckContainer:not(.active) .playerCards .card{
  width:calc(@cardWidth/2);
  height: calc(@cardHeight/2);

  &.roleCard{
    height:calc(@cardHeight/2);
    width:calc(@cardHeight/2);
  }
}

.double-card{
  position:absolute;
  height:calc(@cardHeight * 2.5);
  width :calc(@cardWidth * 2.5);
  top:calc(@cardHeight / 3 *-1);
  box-shadow:
        0 0 50px 20px lightblue;

  z-index:2000 !important;
}

.double-card:first-of-type{
  left:0px;
}
.double-card:not(:first-of-type){
  right:0px;
}

.generate-card-indexes(100);

.generate-card-indexes(@n, @i: 1) when (@i =< @n) {
  .card-@{i} {
    z-index: (1000 - @i);
  }
  .generate-card-indexes(@n, (@i + 1));
}
