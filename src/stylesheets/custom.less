@cardWidth:2.59em;
@cardHeight:4em;
@cardMargin:0.5em;

@font-face {
  font-family: 'Rooters';
  src: url(../js/res/Rooters.ttf) format("truetype");
}
@font-face {
  font-family: 'Alte Haas Grotesk';
  src: url(../js/res/AlteHaasGroteskRegular.ttf) format("truetype");
}
@font-face {
  font-family: 'Poppins';
  src: url(../js/res/Poppins-Regular.ttf) format("truetype");
  font-weight:400;
}
@font-face {
  font-family: 'Poppins';
  src: url(../js/res/Poppins-Medium.ttf) format("truetype");
  font-weight:600;
}
@font-face {
  font-family: 'Poppins';
  src: url(../js/res/Poppins-Light.ttf) format("truetype");
  font-weight:300;
}

body{
  min-height:100vh;
  min-width:767px;
  width:100vw;
  position:relative;
  overflow-x:hidden;
  background-color:#c0c5d2;
  //background-color: #636680;
  color:rgba(41, 4, 45,1);
  font-family: Poppins, Open Sans, sans-serif;
}

body::after {
  content: "";
  background: url(../js/public/static/MusterPink.png);
  background-repeat: repeat;
  opacity: 0.05;
  top: 0;
  left: 0;
  bottom: 0;
  right:0;
  position: absolute;
  z-index: -1;
}

.player h2{
  font-family: Rooters, Poppins, sans-serif;
}
.stacks h2{
  font-size:1.3em;
  opacity:0.8;
  font-weight:300;
}

img{
  width:100%;
  height:auto;
}

.fade.modal.show{
  display:flex!important;
  justify-content: center;
  align-items: center;
}
.modal-content, .modal-header, .modal-footer{
  color:black;
  background-color:transparent;
  border:none;
  justify-content: center;
  font-size:1.5em;
  text-align: center;
}
.modal-backdrop.show{
  opacity:1;
  background-image:radial-gradient(circle, #fff 20%, transparent 200%);
  background-color:transparent;
  width:100%;
  height:100%;
}
.ruleModal.fade.modal.show, .ruleModal .modal-content{
  text-align:justify;
  align-items: flex-start;
}
.ruleModal .modal-dialog{
  max-width:800px;
  @media(max-width:991px){
    padding: auto 1em;
  }
  font-family: Poppins, sans-serif;
  & h1, h2, h3, h4, h5, h6{
    font-weight:600;
  }
}
.prediger-modal{

  align-items: flex-start;
  & .modal-body{
    & form {
      text-align: left;

      & label{
        font-size: 0.95rem;
      }
    }
    & h3{
      font-size: 1.4rem;
      padding-top:2em;
    }
  }

}
.carousel-control-prev {
    left: -25%;
    & .carousel-control-prev-icon{
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3e%3c/svg%3e")
    }
}

.carousel-control-next {
    right: -25%;
    & .carousel-control-next-icon{
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23000' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3e%3c/svg%3e")
    }
}
.carousel-indicators {
  bottom:-30px;
  & li {
    background-color:rgba(45,4,41,1);
    width:10px;
    height:10px;
    border-radius:50%;

  }
}
.tutorial-modal{
  align-items: start;
  & p{
    font-size:16px;
  }
}

.form-class{
  position: absolute;
  align-items: center;
  justify-content: center;
  display: flex;
  text-align: center;
  height: 100vh;
    margin-left: 20%;
    margin-right: 20%;
    width: 60%;
  }

  .form-control{
    //border-color:#C9FFEF;
    border-color: rgba(41, 4, 45,0.2);
    &:focus{
      box-shadow: 0 0 1rem rgba(201, 255, 239, 0.5)
    }
  }
  .custom-control-input{
    &:checked~.custom-control-label::before {
      border-color: #29042d;
      background-color: #29042d;
    }
    & .custom-control-label::before {
      border-color: #29042d;
      background-color: #29042d;
    }
    &:focus~.custom-control-label::before {
      box-shadow: 0 0 1rem rgba(201, 255, 239, 0.5)
    }
  }

.game-info{
  z-index: 1002;
  position: absolute;
  padding: 1rem 1.8rem;
  border-bottom-right-radius: 50px ;
  background-color:rgba(41, 4, 45,0.5);
  font-size:1.25rem;
  max-width:33%;
  color:white;
  font-size: 1.1em;
}

.playerCards div.card, .double-card, .stackCards .card:first-child{
    cursor:pointer;
    &:hover{
      margin-top:-3px;
    }
}


//Override
.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
     position: static;
}

.z-index-100{
  z-index:1001;
}
.modal-backdrop{
  z-index:1003;
}
.center{
  display:flex;
  justify-content: center;
}

.button-row{
  display:flex;
  justify-content: center;
  position: absolute;
  bottom:0px;
  width:50%;
  height:5em;
  left:25%;
  @media(min-width:991px){
    //overflow:hidden;
  }
  padding-top:1em;
}

.top-buttons .btn{
  margin:5px;
  margin-left:0px;
}
.btn-purple{
  height: 4em;
  width:4em;
  border-radius:50%;
  background-color:#29042D;
  border-color:#29042D;
  color:white;
  margin-right:0.5em;
}
.btn-purple:hover, .btn-purple:focus{
  background-color:lighten(#29042D, 5%);
  border-color:lighten(#29042D,5%);
  color:white;
    box-shadow: 0 0 1rem rgba(201, 255, 239, 0.5)
}
.btn-purple:active:focus,.btn-purple:visited, .btn-purple:link, .btn-purple:target, .btn-purple:disabled{
    background-color:darken(#29042D, 5%);
    border-color:darken(#29042D,5%);
    color:white;
      box-shadow: 0 0 1rem rgba(201, 255, 239, 0.5)
}

.btn-purple:disabled{
    background-color:lighten(#29042D, 25%);
    border-color:lighten(#29042D,25%);
    color:grey;
}
.btn-purple.jumping{
  background-color:lighten(#29042D, 5%);
  border-color:lighten(#29042D,5%);
    box-shadow: 0 0 1rem rgba(201, 255, 239, 0.5);
    animation-name: jumping;
    animation-duration: 0.8s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
}
@keyframes jumping {
  0%   { transform: scale(1,1);    margin-top:0px; }
 10%  { transform: scale(1.01,.99);   margin-top:0px; }
 30%  { transform: scale(.99,1.01);   margin-top:-8px; }
 50%  { transform: scale(1.01,.99);   margin-top:0px; }
 57%  { transform: scale(1,1);   margin-top:-1px; }
 64%  { transform: scale(1,1);   margin-top:0px;}
 100% { transform: scale(1,1);   margin-top:0px;}
}

.bg-primary{
  background-color: rgba(102, 132, 212, 0.33) !important;
    border-radius: 20px;
}

.deckContainer{
  padding:@cardMargin;
}
.deckContainer.active{
  background-color:rgba(41, 4, 45,0.69);
  border-radius:50px;
  padding:2%;
  color:white;
  & .card .card-front, .card .card-back{
    border:none;
    box-shadow: 0 0 1rem rgba(192, 197, 210,0.4);
  }
}
.deckContainer:not(.active) .playerCards .card .card-front,.deckContainer:not(.active) .playerCards .card .card-back{
    box-shadow: 0 0 1rem rgba(41, 4, 45, 0.5);
}
.deckContainer .playerCards .card.show-card{
  & .card-front, .card-back{
    height: @cardHeight *2.25;
    width: @cardWidth *2.25;
    top:-100%;
    left:-60%;
  }
  z-index:100;
}
.deckHeading{
  text-align: center;
}

.deck{
  display:flex;
  text-align:center;
  justify-content: center;
}
.card{
  height: @cardHeight;
  width:@cardWidth;
  position:relative;
}

.roleCard.card{
  position:absolute;
  left:100%;
}
.roleCard.card.modalRoleCard{
  position:relative;
    height:calc(@cardHeight*3);
    width:calc(@cardHeight*3 *(5/9));
  left:0%;
  align-self: center;
  //background-color:red;
}

.active .roleCard.card{
  height:calc(@cardHeight*2);
  width:calc(@cardHeight*2 *(5/9));
  top:10%;
  //background-color:red;
}
.end-true .roleCard.card{
  height:calc(@cardHeight);
  width:calc(@cardHeight *(5/9));
  //background-color:red;
}

.card-down{
    color:transparent;
}

.stacks{
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: calc(100%-10em);
  width: 100%;
  top: 0px;
  left: 0px;
}
.deck.stackCards .card{
  margin-left:(@cardWidth*-1+0.1);
}
.deck.stackCards .card:first-child:not(.front-card), .deck.stackCards .front-card+.card{
  margin-left:@cardMargin;
}
.front-card{
      height: @cardHeight *2;
      width: @cardWidth *2 ;
      position:absolute;
      left:0;
      top:0%;
}

.player:first-child:nth-last-child(2),
.player:nth-child(2):last-child{
    .generate-player-position-indexes(2);
}

.player:first-child:nth-last-child(3),
.player:nth-child(2):nth-last-child(2),
.player:nth-child(3):last-child{
    .generate-player-position-indexes(3);
}

.player:first-child:nth-last-child(4),
.player:nth-child(2):nth-last-child(3),
.player:nth-child(3):nth-last-child(2),
.player:nth-child(4):last-child{
    .generate-player-position-indexes(4);
}

.player:first-child:nth-last-child(5),
.player:nth-child(2):nth-last-child(4),
.player:nth-child(3):nth-last-child(3),
.player:nth-child(4):nth-last-child(2),
.player:nth-child(5):last-child{
    .generate-player-position-indexes(5);
}

.player:first-child:nth-last-child(6),
.player:nth-child(2):nth-last-child(5),
.player:nth-child(3):nth-last-child(4),
.player:nth-child(4):nth-last-child(3),
.player:nth-child(5):nth-last-child(2),
.player:nth-child(6):last-child{
    .generate-player-position-indexes(6);
}

.generate-player-position-indexes(@n, @i: 1) when (@i =< @n) {
  .player-@{i} {
    position:absolute;
    transform:rotate((360 / @n )*(@i - 1deg));
    & when (mod(@n,2)=1) and not (@i = 1){
      & when (@i = ((@n + 1) / 2 )), (@i = ((@n + 1) / 2 + 1) ){
        top:25%;
        & when (3 = @n){
         @media(max-width:991px){
           top:40%;
        }
        }
        & when (@i <= ((@n + 1) / 2 ) ){
          left:5%;
          @media(max-width:991px){
            left:0%;
            transform:rotate(90deg);
          }
          @media(min-width:1200px){
            left:15%;
          }
        }
        & when (@i > ((@n + 1) / 2 )){
          right:5%;
          @media(max-width:991px){
            right:0%;
            transform:rotate(270deg);
          }
          @media(min-width:1200px){
            right:15%;
          }
        }
      }

      & when not (@i = ((@n + 1) / 2 )) and not (@i = ((@n + 1) / 2 + 1) ){
        bottom: 25%;
        & when (@i <= ((@n + 1) / 2 ) ){
          left:5%;
          @media(max-width:991px){
            left:0%;
            transform:rotate(90deg);
          }
          @media(min-width:1200px){
            left:15%;
          }
        }
        & when (@i > ((@n + 1) / 2 )){
          right:5%;
          @media(max-width:991px){
            right:0%;
            transform:rotate(270deg);
          }
          @media(min-width:1200px){
            right:15%;
          }
        }
      }

    }

    & when (mod(@n,2)=0) and not (@i = 1){
      & when ((@n / 2) + 1 > @i){
        left:5%;
        bottom:60%;
        @media(max-width:991px){
          left:0%;
          bottom:55%;
          transform:rotate(90deg);


        }
        @media(min-width:1200px){
          left:15%;
        }
        & when (@i = 2){
          bottom: 25%;
          @media(max-width:991px){
            bottom:20%
          }
        }
      }
      & when ((@n / 2) + 1 < @i){
        right:5%;
        bottom:60%;
        @media(max-width:991px){
          right:0%;
          bottom:55%;
          transform:rotate(270deg);
        }
        @media(min-width:1200px){
          right:15%;
        }
        & when (@i = @n){
          bottom: 25%;
          @media(max-width:991px){
            bottom:10%
          }
        }
      }
      & when (@n = 4) and not (@i = 3){
        bottom:40%;
        @media(max-width:991px){
          bottom:40%
        }
      }
    }
    & when (@i= @n/2+1) and (mod(@n,2)=0){
      top:5em;
    }
    & when (@i = 1) {
      bottom: 5em;
      transform:rotate(0deg);
      //align-self:center;
    }
    transition: 0.5s ease-out;
  }
  .generate-player-position-indexes(@n, (@i + 1));
}



.deck.playerCards .card{
  margin: auto @cardMargin;
}


.card {
  background-color: transparent;
  border: none;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.card-body {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
  padding: 0px;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
.card-down .card-body {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  top:0px;
  left:0px;
  background-color: rgb(41,4,45);
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  background-size:contain;
  //background-repeat:no-repeat;
    border: 1px solid #867ca5;
    border-radius: 3px;
  & p{
    position: relative;
    z-index:-1;
    overflow:hidden;
    height:100%;
    width:100%;
  }
}

.chosenCard .card-front, .chosenCard .card-back{
  box-shadow: 0 0 14px 4px rgba(255, 255, 255, 0.7),
  0 0 14px 4px rgb(82, 16, 191) !important;
}

.predigerCard .card-front, .predigerCard .card-back{
  box-shadow:
        0 0 10px 2px rgba(255,255,255,0.7),  /* inner white */
        0 0 14px 4px #007bff !important;
}

.enemyCard .card-front, .enemyCard .card-back{
  box-shadow:
        0 0 10px 2px rgba(255,255,255,0.7),
        0 0 14px 4px rgb(219, 255, 4) !important;
}

/* Style the front side*/
.value-0 .card-front{
    background-image:url(../js/public/static/value-0.png);
}

.value-1 .card-front{
    background-image:url(../js/public/static/value-1.png);
}

.value-2 .card-front{
    background-image:url(../js/public/static/value-2.png);
}

.value-3 .card-front{
    background-image:url(../js/public/static/value-3.png);
}

.value-4 .card-front{
    background-image:url(../js/public/static/value-4.png);
}

.value-5 .card-front{
    background-image:url(../js/public/static/value-5.png);
}

.value-6 .card-front{
    background-image:url(../js/public/static/value-6.png);
}

.value-7 .card-front{
    background-image:url(../js/public/static/value-7.png);
}

.value-8 .card-front{
    background-image:url(../js/public/static/value-8.png);
}

.value-9 .card-front{
    background-image:url(../js/public/static/value-9.png);
}

.value-double .card-front{
    background-image:url(../js/public/static/value-double.png);
}

.value-end .card-front{
    background-image:url(../js/public/static/value-end.png);
}

.value-show .card-front{
    background-image:url(../js/public/static/value-show.png);
}

.value-skip .card-front{
    background-image:url(../js/public/static/value-skip.png);
}

.value-swap .card-front{
    background-image:url(../js/public/static/value-swap.png);
}

.value-role-swap .card-front{
    background-image:url(../js/public/static/value-role-swap.png);
}

.roleCard .card-front{
    //background-image:url(../js/public/static/role-back.png);
    background-repeat: no-repeat;
    border:none;
}
.roleCard.value-abenteurer .card-front{
    background-image:url(../js/public/static/value-abenteurer.png);
}

.roleCard.value-alter-mann .card-front{
    background-image:url(../js/public/static/value-alter-mann.png);
}

.roleCard.value-buerokrat .card-front{
    background-image:url(../js/public/static/value-buerokrat.png);
}

.roleCard.value-gottheit .card-front{
    background-image:url(../js/public/static/value-gottheit.png);
}

.roleCard.value-haendler .card-front{
    background-image:url(../js/public/static/value-haendler.png);
}

.roleCard.value-kobold .card-front{
    background-image:url(../js/public/static/value-kobold.png);
}

.roleCard.value-koenig .card-front{
    background-image:url(../js/public/static/value-koenig.png);
}

.roleCard.value-prediger .card-front{
    background-image:url(../js/public/static/value-prediger.png);
}

.roleCard.value-wanderer .card-front{
    background-image:url(../js/public/static/value-wanderer.png);
}
.roleCard.value-bettler .card-front{
    background-image:url(../js/public/static/value-bettler.png);
}
.roleCard.value-mitlaeufer .card-front{
    background-image:url(../js/public/static/value-mitlaeufer.png);
}
.roleCard.value-scharlatan .card-front{
    background-image:url(../js/public/static/value-scharlatan.png);
}

/* Style the back side */
.card-back {
  background-image:url(../js/public/static/backcard.png);
  transform: rotateY(180deg);
}
.roleCard .card-back {
  background-image:url(../js/public/static/role-back.png);
  border:none;
  background-repeat:no-repeat;
  transform: rotateY(180deg);
}

.deckContainer:not(.active) .playerCards .card{
  width:calc(@cardWidth/2);
  height: calc(@cardHeight/2);

  &.roleCard{
    height:calc(@cardHeight/2);
    width:calc(@cardHeight/2 *(5/9));
    //background-color:red;
  }
}

.end-true .deckContainer:not(.active) .playerCards .card{
  width:calc(@cardWidth*0.75);
  height: calc(@cardHeight*0.75);

  &.roleCard{
    height:calc(@cardHeight*0.75);
    width:calc(@cardHeight*0.75 *(5/9));
    //background-color:red;
  }
}

.double-card{
  position:absolute;
  height:calc(@cardHeight * 2.5);
  width :calc(@cardWidth * 2.5);
  top:calc(@cardHeight / 3 *-1);
  box-shadow:
        0 0 50px 20px lightblue;

  z-index:2000 !important;
}

.double-card:first-of-type{
  left:0px;
}
.double-card:not(:first-of-type){
  right:0px;
}

.generate-card-indexes(100);

.generate-card-indexes(@n, @i: 1) when (@i =< @n) {
  .card-@{i} {
    z-index: (1000 - @i);
  }
  .generate-card-indexes(@n, (@i + 1));
}
